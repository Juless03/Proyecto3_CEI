// Declaración de tipos de lista y nodo
type IntList ~ pointer Node;
type Node ~ record
    head: Integer;
    tail: Node;
end;

let 
    var list: IntList; 
    var currentNode: Node; 
    var nextNode: Node; 
    var num: Integer; 
in
begin
    getint(var num); // Número de nodos a crear.
    
    if num > 0 then
    begin
        currentNode := new(Node); // Crear el primer nodo.
        currentNode.head := 1;
        currentNode.tail := nil;
        list := currentNode; // Asignar el primer nodo a la lista.
        num := num - 1;
    end;

    while num > 0 do
    begin
        nextNode := new(Node); // Crear un nuevo nodo.
        nextNode.head := currentNode.head + 1;
        nextNode.tail := nil;
        
        currentNode.tail := nextNode; // Conectar el nodo actual con el siguiente.
        
        currentNode := nextNode; // El nodo siguiente ahora es el actual.
        num := num - 1;
    end;
end

